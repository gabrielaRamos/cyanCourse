package main

import cyan.io

object CatchAgeErrorHard
overload
func eval: ExceptionNegAge e {
  Out println: "Age ", e age, " is negative";
  System exit: 1
}
overload
func eval: ExceptionInvAge e {
  Out println: "Age ", e age, " is out of limits";
  System exit: 1
}

 @pushCompilationContextStatement(pp8, pp) 

    // Methods added by the compiler
    override    func prototype -> CatchAgeErrorHard {
        @javacode{* return prototype;
        *}
    } 
 @popCompilationContext(pp8) 
 @pushCompilationContextStatement(new262, new) 
    // Methods added by the compiler

    override    func clone -> CatchAgeErrorHard {
        @javacode<<*
        try {
            return (_CatchAgeErrorHard ) this.clone(); 
        } catch (CloneNotSupportedException e) { }
        return null;
        *>>    } 
    func init { } 

    func new -> CatchAgeErrorHard {
        @javacode<**< 
            return new _CatchAgeErrorHard();        >**>
    }
 @popCompilationContext(new262) 
end
